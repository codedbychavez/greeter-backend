# Go

# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- main

pool:
  vmImage: ubuntu-latest
  name: Self Hosted Agents

steps: 
- task: GoTool@0
  inputs:
    version: '1.13.5'
  displayName: 'Download and Install Go'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Go Get - Download Go packages and their dependencies'

# Sonar Cloud -->  Prepare Analysis Configuration
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud Connection'
    organization: 'codedbychavez'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'codedbychavez_greeter-backend'
    cliProjectName: 'greeter-backend'
    cliSources: '.'
  displayName: 'Prepare Analysis Configuration'

- task: Go@0
  inputs:
    command: 'build'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Go Build - Builds the Go application'

# Sonar Cloud -->  Run Code Analysis
- task: SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: CopyFiles@2
  inputs:
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Build artificats'

- task: PublishBuildArtifacts@1
  inputs:
     artifactName: drop
  displayName: 'Publish Artifacts'

# Sonar Cloud -->  Publish Quality Gate Result
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
  displayName: Publish quality gate result
